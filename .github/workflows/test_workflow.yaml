name: Run linters
on:
  push:
    branches:
      - '*'         # matches every branch
      - '*/*'       # matches every branch containing a single '/'
      - '!master'   # excludes master

jobs:
  black:
    name: Black code formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
        with:
          fetch-depth: '0'

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        run: >-
          python -m
          pip install
          black
          --user

      - name: Get changed files
        id: getfile
        run: |
          echo "::set-output name=files::$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep .py$ | xargs)"

      - name: Echo output
        run: |
          echo ${{ steps.getfile.outputs.files }}

      - run: /home/runner/.local/bin/black -l 80 -t py27 ${{ steps.getfile.outputs.files }}
      - run: |
           git config --global user.email "silviu.surcica@solarwinds.com" && git config --global user.name "Your Name" && git add . && git commit -m 'Black formatting from Github Actions' && git push

#      - name: Add and commit
#        uses: EndBug/add-and-commit@v4
#        with:
#         message: 'Black formatting from Github Actions'
#        env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  flake8:
    name: Flake8 checks
    runs-on: ubuntu-latest
    needs: black
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
        with:
          fetch-depth: '0'
#      - run: git pull
      - name: Get changed files
        id: getfile
        run: |
          echo "::set-output name=files::$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep .py$ | xargs)"

      - name: Set up Python 3.7
        if: ${{ steps.getfile.outputs.files }}
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        if: ${{ steps.getfile.outputs.files }}
        run: >-
          python -m
          pip install
          flake8
          --user

      - name: Echo output
        if: ${{ steps.getfile.outputs.files }}
        run: |
          echo ${{ steps.getfile.outputs.files }}

      - name: Run flake8
        if: ${{ steps.getfile.outputs.files }}
        run: /home/runner/.local/bin/flake8 --exclude "Dockerfile,CODEOWNERS,*.sql,README,*.c,Jenkinsfile,alembic,*.pem,*.json,*.css,*.html,*.js,*.ini,*.md,*.txt,.svn,CVS,.bzr,.hg,.git,__pycache__,.tox,*test*"   ${{ steps.getfile.outputs.files }}

